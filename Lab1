using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;

namespace NPuzzle
{
    class Startup
    {
        /*Start up the program*/
        static void Main()
        {
             int size = Int32.Parse(Console.ReadLine());
            Random rnd = new Random();

            Board board = new Board(size);
            Board solution = new Board(size);

            board.Display();
            // for(int i=0; i<(size*size); i++){
            //    board.Move(rnd.Next(4));
            //}
            Clock clock = new Clock(board, solution);
            clock.Running();

        }
    }
    enum KeyStroke
    {
        Right,
        Left,
        Up,
        Down
    }
    /*Construct board of unknown size
     Move space acording to input
     Print board*/
    class Board
    {
        int boardS;
        int[,] gameboard;
        public Board(int size)
        {
            boardS = size;
            gameboard = new int[size, size];
            for (int i = 0; i < size; i++)
            {
                for (int j = 0; j < size; j++)
                {
                    if (i == size - 1 & j == size - 1)
                    {
                        gameboard[i, j] = 0;
                        break;
                    }

                    gameboard[i, j] = (i * size + j + 1);
                }
            }
        }

        public void Display()
        {
            Console.WriteLine("-----------------------------------");
            for (int i = 0; i < boardS; i++)
            {
                for (int j = 0; j < boardS; j++)
                {
                    Console.Write(gameboard[i, j]);
                    Console.Write("\t");

                }
                Console.WriteLine();
            }
            Console.WriteLine("-----------------------------------");

        }
    }

    /*Take input from player
      Create randomized input
      Send both to board*/
    class Player
    {

    }

    /*Loop while playing the game
      Check if won*/
    class Clock
    {
        int FPS;
        bool win;
        Board board;
        Board solution;

        public Clock(Board board1, Board solution1)
        {
            FPS = 10;
            win = false;
            board = board1;
            solution = solution1;


        }
        public void Running()
        {


            Console.WriteLine("Press one of the arrow keys or ESC to exit:");
            while (!win)
            {
                if (Console.KeyAvailable)
                {
                    var key = Console.ReadKey(true);
                    switch (key.Key)
                    {
                        case ConsoleKey.LeftArrow:
                            Console.WriteLine(KeyStroke.Left);
                            Console.WriteLine("Press one of the arrow keys or ESC to exit:");
                            break;
                        case ConsoleKey.RightArrow:
                            Console.WriteLine(KeyStroke.Right);
                            Console.WriteLine("Press one of the arrow keys or ESC to exit:");
                            break;
                        case ConsoleKey.UpArrow:
                            Console.WriteLine(KeyStroke.Up);
                            Console.WriteLine("Press one of the arrow keys or ESC to exit:");
                            break;
                        case ConsoleKey.DownArrow:
                            Console.WriteLine(KeyStroke.Down);
                            Console.WriteLine("Press one of the arrow keys or ESC to exit:");
                            break;
                        case ConsoleKey.Escape:
                            win = true;
                            Console.WriteLine("\nBYE!");
                            break;
                    }
                }
                // wait 100ms before checking if a key has been pressed
                Thread.Sleep(1000 / FPS);
            }
        }
    }
}